import { __extends } from "tslib";
import { SNSClient } from "./SNSClient";
import { AddPermissionCommand, } from "./commands/AddPermissionCommand";
import { CheckIfPhoneNumberIsOptedOutCommand, } from "./commands/CheckIfPhoneNumberIsOptedOutCommand";
import { ConfirmSubscriptionCommand, } from "./commands/ConfirmSubscriptionCommand";
import { CreatePlatformApplicationCommand, } from "./commands/CreatePlatformApplicationCommand";
import { CreatePlatformEndpointCommand, } from "./commands/CreatePlatformEndpointCommand";
import { CreateTopicCommand } from "./commands/CreateTopicCommand";
import { DeleteEndpointCommand, } from "./commands/DeleteEndpointCommand";
import { DeletePlatformApplicationCommand, } from "./commands/DeletePlatformApplicationCommand";
import { DeleteTopicCommand } from "./commands/DeleteTopicCommand";
import { GetEndpointAttributesCommand, } from "./commands/GetEndpointAttributesCommand";
import { GetPlatformApplicationAttributesCommand, } from "./commands/GetPlatformApplicationAttributesCommand";
import { GetSMSAttributesCommand, } from "./commands/GetSMSAttributesCommand";
import { GetSubscriptionAttributesCommand, } from "./commands/GetSubscriptionAttributesCommand";
import { GetTopicAttributesCommand, } from "./commands/GetTopicAttributesCommand";
import { ListEndpointsByPlatformApplicationCommand, } from "./commands/ListEndpointsByPlatformApplicationCommand";
import { ListPhoneNumbersOptedOutCommand, } from "./commands/ListPhoneNumbersOptedOutCommand";
import { ListPlatformApplicationsCommand, } from "./commands/ListPlatformApplicationsCommand";
import { ListSubscriptionsByTopicCommand, } from "./commands/ListSubscriptionsByTopicCommand";
import { ListSubscriptionsCommand, } from "./commands/ListSubscriptionsCommand";
import { ListTagsForResourceCommand, } from "./commands/ListTagsForResourceCommand";
import { ListTopicsCommand } from "./commands/ListTopicsCommand";
import { OptInPhoneNumberCommand, } from "./commands/OptInPhoneNumberCommand";
import { PublishCommand } from "./commands/PublishCommand";
import { RemovePermissionCommand, } from "./commands/RemovePermissionCommand";
import { SetEndpointAttributesCommand, } from "./commands/SetEndpointAttributesCommand";
import { SetPlatformApplicationAttributesCommand, } from "./commands/SetPlatformApplicationAttributesCommand";
import { SetSMSAttributesCommand, } from "./commands/SetSMSAttributesCommand";
import { SetSubscriptionAttributesCommand, } from "./commands/SetSubscriptionAttributesCommand";
import { SetTopicAttributesCommand, } from "./commands/SetTopicAttributesCommand";
import { SubscribeCommand } from "./commands/SubscribeCommand";
import { TagResourceCommand } from "./commands/TagResourceCommand";
import { UnsubscribeCommand } from "./commands/UnsubscribeCommand";
import { UntagResourceCommand, } from "./commands/UntagResourceCommand";
/**
 * <fullname>Amazon Simple Notification Service</fullname>
 *         <p>Amazon Simple Notification Service (Amazon SNS) is a web service that enables you to build
 *             distributed web-enabled applications. Applications can use Amazon SNS to easily push
 *             real-time notification messages to interested subscribers over multiple delivery
 *             protocols. For more information about this product see <a href="http://aws.amazon.com/sns/">https://aws.amazon.com/sns</a>. For detailed information about Amazon SNS
 *             features and their associated API calls, see the <a href="https://docs.aws.amazon.com/sns/latest/dg/">Amazon SNS Developer Guide</a>. </p>
 *         <p>We also provide SDKs that enable you to access Amazon SNS from your preferred programming
 *             language. The SDKs contain functionality that automatically takes care of tasks such as:
 *             cryptographically signing your service requests, retrying requests, and handling error
 *             responses. For a list of available SDKs, go to <a href="http://aws.amazon.com/tools/">Tools for Amazon Web Services</a>. </p>
 */
var SNS = /** @class */ (function (_super) {
    __extends(SNS, _super);
    function SNS() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SNS.prototype.addPermission = function (args, optionsOrCb, cb) {
        var command = new AddPermissionCommand(args);
        if (typeof optionsOrCb === "function") {
            this.send(command, optionsOrCb);
        }
        else if (typeof cb === "function") {
            if (typeof optionsOrCb !== "object")
                throw new Error("Expect http options but get " + typeof optionsOrCb);
            this.send(command, optionsOrCb || {}, cb);
        }
        else {
            return this.send(command, optionsOrCb);
        }
    };
    SNS.prototype.checkIfPhoneNumberIsOptedOut = function (args, optionsOrCb, cb) {
        var command = new CheckIfPhoneNumberIsOptedOutCommand(args);
        if (typeof optionsOrCb === "function") {
            this.send(command, optionsOrCb);
        }
        else if (typeof cb === "function") {
            if (typeof optionsOrCb !== "object")
                throw new Error("Expect http options but get " + typeof optionsOrCb);
            this.send(command, optionsOrCb || {}, cb);
        }
        else {
            return this.send(command, optionsOrCb);
        }
    };
    SNS.prototype.confirmSubscription = function (args, optionsOrCb, cb) {
        var command = new ConfirmSubscriptionCommand(args);
        if (typeof optionsOrCb === "function") {
            this.send(command, optionsOrCb);
        }
        else if (typeof cb === "function") {
            if (typeof optionsOrCb !== "object")
                throw new Error("Expect http options but get " + typeof optionsOrCb);
            this.send(command, optionsOrCb || {}, cb);
        }
        else {
            return this.send(command, optionsOrCb);
        }
    };
    SNS.prototype.createPlatformApplication = function (args, optionsOrCb, cb) {
        var command = new CreatePlatformApplicationCommand(args);
        if (typeof optionsOrCb === "function") {
            this.send(command, optionsOrCb);
        }
        else if (typeof cb === "function") {
            if (typeof optionsOrCb !== "object")
                throw new Error("Expect http options but get " + typeof optionsOrCb);
            this.send(command, optionsOrCb || {}, cb);
        }
        else {
            return this.send(command, optionsOrCb);
        }
    };
    SNS.prototype.createPlatformEndpoint = function (args, optionsOrCb, cb) {
        var command = new CreatePlatformEndpointCommand(args);
        if (typeof optionsOrCb === "function") {
            this.send(command, optionsOrCb);
        }
        else if (typeof cb === "function") {
            if (typeof optionsOrCb !== "object")
                throw new Error("Expect http options but get " + typeof optionsOrCb);
            this.send(command, optionsOrCb || {}, cb);
        }
        else {
            return this.send(command, optionsOrCb);
        }
    };
    SNS.prototype.createTopic = function (args, optionsOrCb, cb) {
        var command = new CreateTopicCommand(args);
        if (typeof optionsOrCb === "function") {
            this.send(command, optionsOrCb);
        }
        else if (typeof cb === "function") {
            if (typeof optionsOrCb !== "object")
                throw new Error("Expect http options but get " + typeof optionsOrCb);
            this.send(command, optionsOrCb || {}, cb);
        }
        else {
            return this.send(command, optionsOrCb);
        }
    };
    SNS.prototype.deleteEndpoint = function (args, optionsOrCb, cb) {
        var command = new DeleteEndpointCommand(args);
        if (typeof optionsOrCb === "function") {
            this.send(command, optionsOrCb);
        }
        else if (typeof cb === "function") {
            if (typeof optionsOrCb !== "object")
                throw new Error("Expect http options but get " + typeof optionsOrCb);
            this.send(command, optionsOrCb || {}, cb);
        }
        else {
            return this.send(command, optionsOrCb);
        }
    };
    SNS.prototype.deletePlatformApplication = function (args, optionsOrCb, cb) {
        var command = new DeletePlatformApplicationCommand(args);
        if (typeof optionsOrCb === "function") {
            this.send(command, optionsOrCb);
        }
        else if (typeof cb === "function") {
            if (typeof optionsOrCb !== "object")
                throw new Error("Expect http options but get " + typeof optionsOrCb);
            this.send(command, optionsOrCb || {}, cb);
        }
        else {
            return this.send(command, optionsOrCb);
        }
    };
    SNS.prototype.deleteTopic = function (args, optionsOrCb, cb) {
        var command = new DeleteTopicCommand(args);
        if (typeof optionsOrCb === "function") {
            this.send(command, optionsOrCb);
        }
        else if (typeof cb === "function") {
            if (typeof optionsOrCb !== "object")
                throw new Error("Expect http options but get " + typeof optionsOrCb);
            this.send(command, optionsOrCb || {}, cb);
        }
        else {
            return this.send(command, optionsOrCb);
        }
    };
    SNS.prototype.getEndpointAttributes = function (args, optionsOrCb, cb) {
        var command = new GetEndpointAttributesCommand(args);
        if (typeof optionsOrCb === "function") {
            this.send(command, optionsOrCb);
        }
        else if (typeof cb === "function") {
            if (typeof optionsOrCb !== "object")
                throw new Error("Expect http options but get " + typeof optionsOrCb);
            this.send(command, optionsOrCb || {}, cb);
        }
        else {
            return this.send(command, optionsOrCb);
        }
    };
    SNS.prototype.getPlatformApplicationAttributes = function (args, optionsOrCb, cb) {
        var command = new GetPlatformApplicationAttributesCommand(args);
        if (typeof optionsOrCb === "function") {
            this.send(command, optionsOrCb);
        }
        else if (typeof cb === "function") {
            if (typeof optionsOrCb !== "object")
                throw new Error("Expect http options but get " + typeof optionsOrCb);
            this.send(command, optionsOrCb || {}, cb);
        }
        else {
            return this.send(command, optionsOrCb);
        }
    };
    SNS.prototype.getSMSAttributes = function (args, optionsOrCb, cb) {
        var command = new GetSMSAttributesCommand(args);
        if (typeof optionsOrCb === "function") {
            this.send(command, optionsOrCb);
        }
        else if (typeof cb === "function") {
            if (typeof optionsOrCb !== "object")
                throw new Error("Expect http options but get " + typeof optionsOrCb);
            this.send(command, optionsOrCb || {}, cb);
        }
        else {
            return this.send(command, optionsOrCb);
        }
    };
    SNS.prototype.getSubscriptionAttributes = function (args, optionsOrCb, cb) {
        var command = new GetSubscriptionAttributesCommand(args);
        if (typeof optionsOrCb === "function") {
            this.send(command, optionsOrCb);
        }
        else if (typeof cb === "function") {
            if (typeof optionsOrCb !== "object")
                throw new Error("Expect http options but get " + typeof optionsOrCb);
            this.send(command, optionsOrCb || {}, cb);
        }
        else {
            return this.send(command, optionsOrCb);
        }
    };
    SNS.prototype.getTopicAttributes = function (args, optionsOrCb, cb) {
        var command = new GetTopicAttributesCommand(args);
        if (typeof optionsOrCb === "function") {
            this.send(command, optionsOrCb);
        }
        else if (typeof cb === "function") {
            if (typeof optionsOrCb !== "object")
                throw new Error("Expect http options but get " + typeof optionsOrCb);
            this.send(command, optionsOrCb || {}, cb);
        }
        else {
            return this.send(command, optionsOrCb);
        }
    };
    SNS.prototype.listEndpointsByPlatformApplication = function (args, optionsOrCb, cb) {
        var command = new ListEndpointsByPlatformApplicationCommand(args);
        if (typeof optionsOrCb === "function") {
            this.send(command, optionsOrCb);
        }
        else if (typeof cb === "function") {
            if (typeof optionsOrCb !== "object")
                throw new Error("Expect http options but get " + typeof optionsOrCb);
            this.send(command, optionsOrCb || {}, cb);
        }
        else {
            return this.send(command, optionsOrCb);
        }
    };
    SNS.prototype.listPhoneNumbersOptedOut = function (args, optionsOrCb, cb) {
        var command = new ListPhoneNumbersOptedOutCommand(args);
        if (typeof optionsOrCb === "function") {
            this.send(command, optionsOrCb);
        }
        else if (typeof cb === "function") {
            if (typeof optionsOrCb !== "object")
                throw new Error("Expect http options but get " + typeof optionsOrCb);
            this.send(command, optionsOrCb || {}, cb);
        }
        else {
            return this.send(command, optionsOrCb);
        }
    };
    SNS.prototype.listPlatformApplications = function (args, optionsOrCb, cb) {
        var command = new ListPlatformApplicationsCommand(args);
        if (typeof optionsOrCb === "function") {
            this.send(command, optionsOrCb);
        }
        else if (typeof cb === "function") {
            if (typeof optionsOrCb !== "object")
                throw new Error("Expect http options but get " + typeof optionsOrCb);
            this.send(command, optionsOrCb || {}, cb);
        }
        else {
            return this.send(command, optionsOrCb);
        }
    };
    SNS.prototype.listSubscriptions = function (args, optionsOrCb, cb) {
        var command = new ListSubscriptionsCommand(args);
        if (typeof optionsOrCb === "function") {
            this.send(command, optionsOrCb);
        }
        else if (typeof cb === "function") {
            if (typeof optionsOrCb !== "object")
                throw new Error("Expect http options but get " + typeof optionsOrCb);
            this.send(command, optionsOrCb || {}, cb);
        }
        else {
            return this.send(command, optionsOrCb);
        }
    };
    SNS.prototype.listSubscriptionsByTopic = function (args, optionsOrCb, cb) {
        var command = new ListSubscriptionsByTopicCommand(args);
        if (typeof optionsOrCb === "function") {
            this.send(command, optionsOrCb);
        }
        else if (typeof cb === "function") {
            if (typeof optionsOrCb !== "object")
                throw new Error("Expect http options but get " + typeof optionsOrCb);
            this.send(command, optionsOrCb || {}, cb);
        }
        else {
            return this.send(command, optionsOrCb);
        }
    };
    SNS.prototype.listTagsForResource = function (args, optionsOrCb, cb) {
        var command = new ListTagsForResourceCommand(args);
        if (typeof optionsOrCb === "function") {
            this.send(command, optionsOrCb);
        }
        else if (typeof cb === "function") {
            if (typeof optionsOrCb !== "object")
                throw new Error("Expect http options but get " + typeof optionsOrCb);
            this.send(command, optionsOrCb || {}, cb);
        }
        else {
            return this.send(command, optionsOrCb);
        }
    };
    SNS.prototype.listTopics = function (args, optionsOrCb, cb) {
        var command = new ListTopicsCommand(args);
        if (typeof optionsOrCb === "function") {
            this.send(command, optionsOrCb);
        }
        else if (typeof cb === "function") {
            if (typeof optionsOrCb !== "object")
                throw new Error("Expect http options but get " + typeof optionsOrCb);
            this.send(command, optionsOrCb || {}, cb);
        }
        else {
            return this.send(command, optionsOrCb);
        }
    };
    SNS.prototype.optInPhoneNumber = function (args, optionsOrCb, cb) {
        var command = new OptInPhoneNumberCommand(args);
        if (typeof optionsOrCb === "function") {
            this.send(command, optionsOrCb);
        }
        else if (typeof cb === "function") {
            if (typeof optionsOrCb !== "object")
                throw new Error("Expect http options but get " + typeof optionsOrCb);
            this.send(command, optionsOrCb || {}, cb);
        }
        else {
            return this.send(command, optionsOrCb);
        }
    };
    SNS.prototype.publish = function (args, optionsOrCb, cb) {
        var command = new PublishCommand(args);
        if (typeof optionsOrCb === "function") {
            this.send(command, optionsOrCb);
        }
        else if (typeof cb === "function") {
            if (typeof optionsOrCb !== "object")
                throw new Error("Expect http options but get " + typeof optionsOrCb);
            this.send(command, optionsOrCb || {}, cb);
        }
        else {
            return this.send(command, optionsOrCb);
        }
    };
    SNS.prototype.removePermission = function (args, optionsOrCb, cb) {
        var command = new RemovePermissionCommand(args);
        if (typeof optionsOrCb === "function") {
            this.send(command, optionsOrCb);
        }
        else if (typeof cb === "function") {
            if (typeof optionsOrCb !== "object")
                throw new Error("Expect http options but get " + typeof optionsOrCb);
            this.send(command, optionsOrCb || {}, cb);
        }
        else {
            return this.send(command, optionsOrCb);
        }
    };
    SNS.prototype.setEndpointAttributes = function (args, optionsOrCb, cb) {
        var command = new SetEndpointAttributesCommand(args);
        if (typeof optionsOrCb === "function") {
            this.send(command, optionsOrCb);
        }
        else if (typeof cb === "function") {
            if (typeof optionsOrCb !== "object")
                throw new Error("Expect http options but get " + typeof optionsOrCb);
            this.send(command, optionsOrCb || {}, cb);
        }
        else {
            return this.send(command, optionsOrCb);
        }
    };
    SNS.prototype.setPlatformApplicationAttributes = function (args, optionsOrCb, cb) {
        var command = new SetPlatformApplicationAttributesCommand(args);
        if (typeof optionsOrCb === "function") {
            this.send(command, optionsOrCb);
        }
        else if (typeof cb === "function") {
            if (typeof optionsOrCb !== "object")
                throw new Error("Expect http options but get " + typeof optionsOrCb);
            this.send(command, optionsOrCb || {}, cb);
        }
        else {
            return this.send(command, optionsOrCb);
        }
    };
    SNS.prototype.setSMSAttributes = function (args, optionsOrCb, cb) {
        var command = new SetSMSAttributesCommand(args);
        if (typeof optionsOrCb === "function") {
            this.send(command, optionsOrCb);
        }
        else if (typeof cb === "function") {
            if (typeof optionsOrCb !== "object")
                throw new Error("Expect http options but get " + typeof optionsOrCb);
            this.send(command, optionsOrCb || {}, cb);
        }
        else {
            return this.send(command, optionsOrCb);
        }
    };
    SNS.prototype.setSubscriptionAttributes = function (args, optionsOrCb, cb) {
        var command = new SetSubscriptionAttributesCommand(args);
        if (typeof optionsOrCb === "function") {
            this.send(command, optionsOrCb);
        }
        else if (typeof cb === "function") {
            if (typeof optionsOrCb !== "object")
                throw new Error("Expect http options but get " + typeof optionsOrCb);
            this.send(command, optionsOrCb || {}, cb);
        }
        else {
            return this.send(command, optionsOrCb);
        }
    };
    SNS.prototype.setTopicAttributes = function (args, optionsOrCb, cb) {
        var command = new SetTopicAttributesCommand(args);
        if (typeof optionsOrCb === "function") {
            this.send(command, optionsOrCb);
        }
        else if (typeof cb === "function") {
            if (typeof optionsOrCb !== "object")
                throw new Error("Expect http options but get " + typeof optionsOrCb);
            this.send(command, optionsOrCb || {}, cb);
        }
        else {
            return this.send(command, optionsOrCb);
        }
    };
    SNS.prototype.subscribe = function (args, optionsOrCb, cb) {
        var command = new SubscribeCommand(args);
        if (typeof optionsOrCb === "function") {
            this.send(command, optionsOrCb);
        }
        else if (typeof cb === "function") {
            if (typeof optionsOrCb !== "object")
                throw new Error("Expect http options but get " + typeof optionsOrCb);
            this.send(command, optionsOrCb || {}, cb);
        }
        else {
            return this.send(command, optionsOrCb);
        }
    };
    SNS.prototype.tagResource = function (args, optionsOrCb, cb) {
        var command = new TagResourceCommand(args);
        if (typeof optionsOrCb === "function") {
            this.send(command, optionsOrCb);
        }
        else if (typeof cb === "function") {
            if (typeof optionsOrCb !== "object")
                throw new Error("Expect http options but get " + typeof optionsOrCb);
            this.send(command, optionsOrCb || {}, cb);
        }
        else {
            return this.send(command, optionsOrCb);
        }
    };
    SNS.prototype.unsubscribe = function (args, optionsOrCb, cb) {
        var command = new UnsubscribeCommand(args);
        if (typeof optionsOrCb === "function") {
            this.send(command, optionsOrCb);
        }
        else if (typeof cb === "function") {
            if (typeof optionsOrCb !== "object")
                throw new Error("Expect http options but get " + typeof optionsOrCb);
            this.send(command, optionsOrCb || {}, cb);
        }
        else {
            return this.send(command, optionsOrCb);
        }
    };
    SNS.prototype.untagResource = function (args, optionsOrCb, cb) {
        var command = new UntagResourceCommand(args);
        if (typeof optionsOrCb === "function") {
            this.send(command, optionsOrCb);
        }
        else if (typeof cb === "function") {
            if (typeof optionsOrCb !== "object")
                throw new Error("Expect http options but get " + typeof optionsOrCb);
            this.send(command, optionsOrCb || {}, cb);
        }
        else {
            return this.send(command, optionsOrCb);
        }
    };
    return SNS;
}(SNSClient));
export { SNS };
//# sourceMappingURL=SNS.js.map